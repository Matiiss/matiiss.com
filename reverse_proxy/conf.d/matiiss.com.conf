ssl_certificate /etc/nginx/ssl/matiiss.com/full.pem;
ssl_certificate_key /etc/nginx/ssl/matiiss.com/key.pem;

server {
    listen 443 ssl;
    server_name matiiss.com www.matiiss.com;

    location / {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;

        proxy_cache proxy;
        proxy_cache_valid 200 10m;
        proxy_cache_key $scheme$proxy_host$uri$is_args$args;
        proxy_buffering on;
        proxy_no_cache $disabled_cache;
        proxy_ignore_headers "Cache-Control";

        gzip on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types "*";
    }

    # location /nextjs {
    #     proxy_pass http://nextjs-app:8080/;
    # }

    # location /_next {
    #     proxy_pass http://nextjs-app:8080;
    # }
}

server {
    listen 443 ssl;
    server_name blog.matiiss.com www.blog.matiiss.com;

    return 302 https://matiiss.com;
}

server {
    listen 443 ssl;
    server_name cj12.matiiss.com;

    location ~ ^/_next|monaco-editor/$ {
	proxy_pass http://kong:8000;
	proxy_set_header Host $host;
    }

    location /api/platform/ {
        proxy_pass http://kong:8000;
        proxy_set_header Host $host;
    }

    location /api/kong/ {
        proxy_pass http://kong:8000/;
        proxy_set_header Host $host;
    }

    location /api/ {
        proxy_pass http://cj12-backend:9000/;
        proxy_set_header Host $host;
    }

    location /editor/ {
        proxy_pass http://cj12-editor:9010/;
        proxy_set_header Host $host;
	proxy_redirect / /editor/;

	proxy_http_version 1.1;                 # WebSockets need HTTP/1.1
        proxy_set_header Upgrade $http_upgrade; # Tell Nginx to switch protocols
        proxy_set_header Connection "Upgrade";
    }

    location /scripts/ {
        proxy_pass http://cj12-editor:9010;
	proxy_set_header Host $host;
    }

    location /static/ {
        proxy_pass http://cj12-editor:9010;
	proxy_set_header Host $host;
    }
}

server {
    listen 443 ssl;
    server_name *.matiiss.com;

    return 404;
}

server {
    listen 80 default_server;
    server_name .matiiss.com;

    return 301 https://$host$request_uri;
}
